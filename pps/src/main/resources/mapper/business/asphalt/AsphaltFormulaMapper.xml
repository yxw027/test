<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linghang.mapper.business.asphalt.AsphaltFormulaMapper">
    <resultMap id="BaseResultMap" type="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="asphaltNo" jdbcType="VARCHAR" property="asphaltNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="pavingLevel" jdbcType="BIGINT" property="pavingLevel"/>
        <result column="standardLevel" jdbcType="BIGINT" property="standardLevel"/>
        <result column="planOutput" jdbcType="DECIMAL" property="planOutput"/>
        <result column="additionalOutput" jdbcType="DECIMAL" property="additionalOutput"/>
        <result column="passRate" jdbcType="DECIMAL" property="passRate"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="asphaltId" jdbcType="BIGINT" property="asphaltId"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="updateUser" jdbcType="BIGINT" property="updateUser"/>
        <result column="dataVersion" jdbcType="INTEGER" property="dataVersion"/>
        <result column="isVisible" jdbcType="INTEGER" property="isVisible"/>
    </resultMap>

    <resultMap id="BaseResultParamMap" type="com.linghang.model.business.asphalt.param.AsphaltFormulaParamModel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="asphaltNo" jdbcType="VARCHAR" property="asphaltNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="pavingLevel" jdbcType="BIGINT" property="pavingLevel"/>
        <result column="standardLevel" jdbcType="BIGINT" property="standardLevel"/>
        <result column="planOutput" jdbcType="DECIMAL" property="planOutput"/>
        <result column="additionalOutput" jdbcType="DECIMAL" property="additionalOutput"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="asphaltId" jdbcType="BIGINT" property="asphaltId"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="updateUser" jdbcType="BIGINT" property="updateUser"/>
        <result column="dataVersion" jdbcType="INTEGER" property="dataVersion"/>
        <result column="isVisible" jdbcType="INTEGER" property="isVisible"/>
        <result column="tempType" jdbcType="INTEGER" property="tempType"/>
        <result column="oilStoneType" jdbcType="INTEGER" property="oilStoneType"/>
        <result column="asphaltTempType" jdbcType="INTEGER" property="asphaltTempType"/>
        <result column="aggTempType" jdbcType="INTEGER" property="aggTempType"/>
        <result column="unprocessedData" jdbcType="INTEGER" property="unprocessedData"/>
        <result column="mixingTempType" jdbcType="INTEGER" property="mixingTempType"/>
        <collection property="temp" column="{type=tempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="asphaltTemp" column="{type=asphaltTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="aggTemp" column="{type=aggTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="mixingTemp" column="{type=mixingTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>

        <collection property="oilStone" column="{type=oilStoneType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="sieves" column="{formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltSieveSettingModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltSieveSettingMapper.selectByFormulaId">
        </collection>
    </resultMap>
    <resultMap id="baseInfoMap" type="com.linghang.model.business.asphalt.param.AsphaltFormulaParamModel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="asphaltNo" jdbcType="VARCHAR" property="asphaltNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="pavingLevel" jdbcType="BIGINT" property="pavingLevel"/>
        <result column="standardLevel" jdbcType="BIGINT" property="standardLevel"/>
        <result column="planOutput" jdbcType="DECIMAL" property="planOutput"/>
        <result column="additionalOutput" jdbcType="DECIMAL" property="additionalOutput"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="asphaltId" jdbcType="BIGINT" property="asphaltId"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="updateUser" jdbcType="BIGINT" property="updateUser"/>
        <result column="dataVersion" jdbcType="INTEGER" property="dataVersion"/>
        <result column="isVisible" jdbcType="INTEGER" property="isVisible"/>
        <result column="tempType" jdbcType="INTEGER" property="tempType"/>
        <result column="oilStoneType" jdbcType="INTEGER" property="oilStoneType"/>
        <result column="asphaltTempType" jdbcType="INTEGER" property="asphaltTempType"/>
        <result column="aggTempType" jdbcType="INTEGER" property="aggTempType"/>
        <collection property="temp" column="{type=tempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="asphaltTemp" column="{type=asphaltTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="aggTemp" column="{type=aggTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>

        <collection property="oilStone" column="{type=oilStoneType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
        <collection property="mixingTemp" column="{type=mixingTempType,formulaId=id}"
                    ofType="com.linghang.model.business.asphalt.AsphaltWarningConfigModel"
                    select="com.linghang.mapper.business.asphalt.AsphaltWarningConfigMapper.selectByAsphaltId">
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, asphaltNo, name, pavingLevel, standardLevel, planOutput, additionalOutput,
        status, asphaltId, remarks, updateTime, updateUser, dataVersion, isVisible
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * 
        from imp_asphalt_formula
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from imp_asphalt_formula
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from imp_asphalt_formula
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" keyProperty="id" parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        insert into imp_asphalt_formula (
        <include refid="Base_Column_List"/>
        )
        values (#{id,jdbcType=BIGINT},
        #{asphaltNo,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{pavingLevel,jdbcType=BIGINT},
        #{standardLevel,jdbcType=BIGINT},
        #{planOutput,jdbcType=DECIMAL},
        #{additionalOutput,jdbcType=DECIMAL},
        #{status,jdbcType=INTEGER},
        #{asphaltId,jdbcType=BIGINT},
        #{remarks,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP},
        #{updateUser,jdbcType=BIGINT},
        #{dataVersion,jdbcType=INTEGER},
        #{isVisible,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertList" keyProperty="id" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            insert into imp_asphalt_formula (
            <include refid="Base_Column_List"/>
            )
            values (#{item.id,jdbcType=BIGINT},
            #{item.asphaltNo,jdbcType=VARCHAR},
            #{item.name,jdbcType=VARCHAR},
            #{item.pavingLevel,jdbcType=BIGINT},
            #{item.standardLevel,jdbcType=BIGINT},
            #{item.planOutput,jdbcType=DECIMAL},
            #{item.additionalOutput,jdbcType=DECIMAL},
            #{item.status,jdbcType=INTEGER},
            #{item.asphaltId,jdbcType=BIGINT},
            #{item.remarks,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.updateUser,jdbcType=BIGINT},
            #{item.dataVersion,jdbcType=INTEGER},
            #{item.isVisible,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <select id="selectByModel" parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel"
            resultMap="BaseResultMap">
        select * from imp_asphalt_formula where 1 = 1
        <if test="asphaltNo != null">
            and asphaltNo = #{asphaltNo,jdbcType=VARCHAR}
        </if>
        <if test="name != null">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="pavingLevel != null">
            and pavingLevel = #{pavingLevel,jdbcType=BIGINT}
        </if>
        <if test="standardLevel != null">
            and standardLevel = #{standardLevel,jdbcType=BIGINT}
        </if>
        <if test="planOutput != null">
            and planOutput = #{planOutput,jdbcType=DECIMAL}
        </if>
        <if test="additionalOutput != null">
            and additionalOutput = #{additionalOutput,jdbcType=DECIMAL}
        </if>
        <if test="status != null">
            and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="asphaltId != null">
            and asphaltId = #{asphaltId,jdbcType=BIGINT}
        </if>
        <if test="remarks != null">
            and remarks = #{remarks,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
            and updateTime = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateUser != null">
            and updateUser = #{updateUser,jdbcType=BIGINT}
        </if>
        <if test="dataVersion != null">
            and dataVersion = #{dataVersion,jdbcType=INTEGER}
        </if>
        <if test="isVisible != null">
            and isVisible = #{isVisible,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectByOptions" resultMap="BaseResultMap">
        select * from imp_asphalt_formula where 1 = 1
        <if test="options.filters != null">
            <foreach collection="options.filters" item="item">
                and ${item.field}
                <if test="item.operator == 'eq'">
                    = #{item.value}
                </if>
                <if test="item.operator == 'contains'">
                    like '%'+#{item.value}+'%'
                </if>
            </foreach>
        </if>
        order by
        <if test="options.sort != null">
            <foreach collection="options.sort" item="item">
                ${item.field} ${item.dir}
            </foreach>
        </if>
        <if test="options.sort == null">
            id
        </if>
    </select>

    <insert id="insertSelective" keyProperty="id"
            parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        insert into imp_asphalt_formula
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="asphaltNo != null and asphaltNo != ''">
                asphaltNo,
            </if>
            <if test="name != null and name != ''">
                name,
            </if>
            <if test="pavingLevel != null and pavingLevel != ''">
                pavingLevel,
            </if>
            <if test="standardLevel != null and standardLevel != ''">
                standardLevel,
            </if>
            <if test="planOutput != null and planOutput != ''">
                planOutput,
            </if>
            <if test="additionalOutput != null and additionalOutput != ''">
                additionalOutput,
            </if>
            <if test="status != null and status != ''">
                status,
            </if>
            <if test="asphaltId != null and asphaltId != ''">
                asphaltId,
            </if>
            <if test="remarks != null and remarks != ''">
                remarks,
            </if>
            <if test="updateTime != null and updateTime != ''">
                updateTime,
            </if>
            <if test="updateUser != null and updateUser != ''">
                updateUser,
            </if>
            <if test="dataVersion != null and dataVersion != ''">
                dataVersion,
            </if>
            <if test="isVisible != null and isVisible != ''">
                isVisible,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="asphaltNo != null and asphaltNo != ''">
                #{asphaltNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="pavingLevel != null and pavingLevel != ''">
                #{pavingLevel,jdbcType=BIGINT},
            </if>
            <if test="standardLevel != null and standardLevel != ''">
                #{standardLevel,jdbcType=BIGINT},
            </if>
            <if test="planOutput != null and planOutput != ''">
                #{planOutput,jdbcType=DECIMAL},
            </if>
            <if test="additionalOutput != null and additionalOutput != ''">
                #{additionalOutput,jdbcType=DECIMAL},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="asphaltId != null and asphaltId != ''">
                #{asphaltId,jdbcType=BIGINT},
            </if>
            <if test="remarks != null and remarks != ''">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null and updateTime != ''">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null and updateUser != ''">
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="dataVersion != null and dataVersion != ''">
                #{dataVersion,jdbcType=INTEGER},
            </if>
            <if test="isVisible != null and isVisible != ''">
                #{isVisible,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        update imp_asphalt_formula
        <set>
            <if test="asphaltNo != null">
                asphaltNo = #{asphaltNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="pavingLevel != null">
                pavingLevel = #{pavingLevel,jdbcType=BIGINT},
            </if>
            <if test="standardLevel != null">
                standardLevel = #{standardLevel,jdbcType=BIGINT},
            </if>
            <if test="planOutput != null">
                planOutput = #{planOutput,jdbcType=DECIMAL},
            </if>
            <if test="additionalOutput != null">
                additionalOutput = #{additionalOutput,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="asphaltId != null">
                asphaltId = #{asphaltId,jdbcType=BIGINT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                updateUser = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="dataVersion != null">
                dataVersion = #{dataVersion,jdbcType=INTEGER},
            </if>
            <if test="isVisible != null">
                isVisible = #{isVisible,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateById" parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        update imp_asphalt_formula
        set asphaltNo = #{asphaltNo,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            pavingLevel = #{pavingLevel,jdbcType=BIGINT},
            standardLevel = #{standardLevel,jdbcType=BIGINT},
            planOutput = #{planOutput,jdbcType=DECIMAL},
            additionalOutput = #{additionalOutput,jdbcType=DECIMAL},
            status = #{status,jdbcType=INTEGER},
            asphaltId = #{asphaltId,jdbcType=BIGINT},
            remarks = #{remarks,jdbcType=VARCHAR},
            updateTime = #{updateTime,jdbcType=TIMESTAMP},
            updateUser = #{updateUser,jdbcType=BIGINT},
            dataVersion = #{dataVersion,jdbcType=INTEGER},
            isVisible = #{isVisible,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByFormulaCode" resultMap="BaseResultMap">
        select * from imp_asphalt_formula
        where asphaltNo=#{formulaCode,jdbcType=VARCHAR}
        and asphaltId=#{asphaltId,jdbcType=BIGINT}
        and isVisible=0
    </select>

    <select id="selectAll" parameterType="com.linghang.model.business.asphalt.param.AsphaltFormulaParamModel"
            resultMap="BaseResultParamMap">
        select a.*,1 as tempType,2 as oilStoneType,4 as asphaltTempType, 3 as aggTempType,5 as mixingTempType,
         (select case when sum(weight) is null  then 0 else sum(weight) end  from imp_asphalt_metadata m where m.formulaId=a.id)countWeight,
         (select count(1) from imp_asphalt_metadata m2 where m2.formulaCode=a.asphaltNo and m2.asphaltId=a.asphaltId and m2.formulaId is null )unprocessedData
         from imp_asphalt_formula a
         where asphaltId=#{asphaltId,jdbcType=BIGINT}
         and isVisible = 0
    </select>


    <update id="updateUnVisible" parameterType="com.linghang.model.business.asphalt.AsphaltFormulaModel">
        update imp_asphalt_formula set isVisible=1 where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getById" resultMap="BaseResultParamMap">
         select a.*,1 as tempType,2 as oilStoneType,4 as asphaltTempType, 3 as aggTempType, 5 as mixingTempType,
         (select count (1) from imp_asphalt_metadata_result m where m.formulaId=a.id)allCount,
         (select count (1) from imp_asphalt_metadata_result m where m.formulaId=a.id and isPass=0)passCount,
         (select count(1) from imp_asphalt_metadata m2 where m2.formulaCode=a.asphaltNo and m2.asphaltId=a.asphaltId and m2.formulaId is null)unprocessedData
         from imp_asphalt_formula a
         where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getDetailById" resultMap="baseInfoMap">
    select a.*,1 as tempType,2 as oilStoneType,4 as asphaltTempType, 3 as aggTempType,5 as mixingTempType
    from imp_asphalt_formula a where id = #{id,jdbcType=BIGINT}
    </select>


    <select id="getFormulaByAsphaltId" resultType="java.util.Map">
        select id,name,asphaltNo from imp_asphalt_formula where asphaltId = #{asphaltId,jdbcType=BIGINT} and isVisible=0
    </select>

    <update id="updateAsphaltSieveSetting">
        update imp_asphalt_sieve_setting set formulaId=#{newId,jdbcType=BIGINT} where formulaId=#{oldId,jdbcType=BIGINT}
    </update>

    <update id="updateAsphaltSieveSettingVisible">
        update imp_asphalt_sieve_setting set isVisible=1 where formulaId=#{oldId,jdbcType=BIGINT}
    </update>
    <!--重量列表配方查询-->
    <select id="searchFormulaByParam" resultType="java.util.Map">
        SELECT f.id,(case when f.name is null then '无配方' else f.name end) as name from(
        SELECT formulaId from imp_asphalt_metadata m
        where m.asphaltId = #{asphaltId,jdbcType=BIGINT}
        and CONVERT(varchar(100), time, 23) = #{searchTime,jdbcType=VARCHAR}
        group by m.formulaId
        ) as temp
        left join imp_asphalt_formula f on f.id=temp.formulaId
        order by f.id desc
    </select>
    <!--级配列表配方查询-->
    <select id="searchFormulaBySieveParam" resultType="java.util.Map">
        SELECT name from(
        SELECT formulaId from imp_asphalt_metadata_result m
        where m.asphaltId = #{asphaltId,jdbcType=BIGINT}
        and CONVERT(varchar(100), time, 23) = #{searchTime,jdbcType=VARCHAR}
        group by m.formulaId
        ) as temp
        left join imp_asphalt_formula f on f.id=temp.formulaId
    </select>

    <!--首页查询配方统计信息-->
    <select id="selectStatisticByStationId" resultType="java.util.HashMap">
        select f.id,f.asphaltNo as formulaCode,f.name,f.pavingLevel,
        (select (case when sum(m.weight) is null then 0 else sum(m.weight) end) from imp_asphalt_metadata m where f.id =m.formulaId and m.isPass=1) noPassWeight,
        (select (case when sum(m.weight) is null then 0 else sum(m.weight) end) from imp_asphalt_metadata m where f.id =m.formulaId and m.isPass=0) passWeight
        from imp_asphalt_formula f where f.asphaltId=#{stationId,jdbcType=BIGINT} and isVisible=0
        order by id
    </select>
</mapper>